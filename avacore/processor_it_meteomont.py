"""
    Copyright (C) 2022 Friedrich Mütschele and other contributors
    This file is part of pyAvaCore.
    pyAvaCore is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    pyAvaCore is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with pyAvaCore. If not, see <http://www.gnu.org/licenses/>.
"""
from datetime import datetime, timedelta
from typing import Any, List, Optional, TypedDict
from zoneinfo import ZoneInfo

from avacore.avabulletin import (
    AvaBulletin,
    DangerRating,
    AvalancheProblem,
    Region,
)
from avacore.avabulletins import Bulletins
from avacore.processor import JsonProcessor


class PrevisioneValangaItem(TypedDict):
    dataRif: str
    estivo: bool
    regione: Optional[str]
    colorePericolo1: str
    colorePericolo2: str
    codSett: str
    codSottoSett: str
    descSottoSett: str
    gradoPericoloImg: str
    gradoPericoloImgUrl: str
    esposizioneImg: str
    esposizioneImgUrl: str
    quoteCriticheImg: str
    quoteCriticheImgUrl: str
    situazioneTipoImg: str
    situazioneTipoImgUrl: str
    quotaN: str
    quotaS: str
    hNeve: str
    hNeveFresca: Optional[str]
    quotaNeve: Optional[str]
    stSituazione1: Any
    stSituazione2: Any


class Giorno(TypedDict):
    previsioneValanga: List[PrevisioneValangaItem]


class PrevisioniValanghe(TypedDict):
    # generated by datamodel-codegen:
    # filename:  https://servizimeteomont.csifa.carabinieri.it/api/meteomontweb/previsioni/getprevisionivalanghe/data?data=2022-12-10
    giorno0: Giorno
    giorno1: Giorno
    giorno2: Giorno
    giorno3: Giorno


class Processor(JsonProcessor):
    def process_bulletin(self, region_id) -> Bulletins:
        root = self._fetch_json(self.url, {})
        return self.parse_json(region_id, root)

    def parse_json(self, region_id, data: PrevisioniValanghe) -> Bulletins:
        bulletins = Bulletins()
        tzinfo = ZoneInfo("Europe/Rome")
        for valanga in data["giorno0"]["previsioneValanga"]:
            bulletin = AvaBulletin()
            time = bulletin.validTime
            time.startTime = datetime.fromisoformat(valanga["dataRif"])
            time.startTime = time.startTime.replace(tzinfo=tzinfo)
            time.endTime = time.startTime + timedelta(days=1)
            bulletin.regions = [
                Region(
                    regionID=regionID,
                    name=f"{name} := {valanga['regione']} / {valanga['descSottoSett']}",
                )
                for (regionID, name) in regions.items()
                if valanga["descSottoSett"].lower().removeprefix("alpi ")
                in name.lower()
            ] or [
                Region(
                    regionID="IT-???",
                    name=f" {valanga['regione']} / {valanga['descSottoSett']}",
                )
            ]
            bulletin.dangerRatings = [
                DangerRating().set_mainValue_int(int(valanga["colorePericolo1"])),
                DangerRating().set_mainValue_int(int(valanga["colorePericolo2"])),
            ]
            bulletin.avalancheProblems = [
                AvalancheProblem(
                    problemType=problemTypes.get(valanga["situazioneTipoImg"], None),
                    # aspects=valanga["esposizioneImg"]
                )
            ]
            bulletin.customData = dict(
                MeteoMont=dict(
                    snowDepth=valanga["hNeve"],
                    snowDepthAltitude=valanga["quotaNeve"],
                    freshSnow=valanga["hNeveFresca"],
                )
            )
            bulletins.append(bulletin)
        return bulletins


problemTypes = {
    "neveBagnata.jpg": "wet_snow",
    "neveFresca.jpg": "new_snow",
    "neveScivolosa.jpg": "gliding_snow",
    "neveVecchia.jpg": "persistent_weak_layers",
    "neveVentata.jpg": "wind_slab",
}

regions = {
    "IT": "Italia",
    "IT-21": "Piemonte",
    "IT-21-CN-01": "Alpi Cozie Sud di confine",
    "IT-21-CN-02": "Alpi Marittime Occidentali",
    "IT-21-CN-03": "Alpi Cozie Sud",
    "IT-21-CN-04": "Alpi Marittime Orientali",
    "IT-21-CN-05": "Alpi Liguri",
    "IT-21-TO-01": "Alpi Graie di confine",
    "IT-21-TO-02": "Alpi Cozie Nord di confine",
    "IT-21-TO-03": "Alpi Graie",
    "IT-21-TO-04": "Alpi Cozie",
    "IT-21-VB-01": "Alpi Pennine di confine",
    "IT-21-VB-02": "Alpi Lepontine Nord",
    "IT-21-VB-03": "Alpi Lepontine Sud",
    "IT-21-VC-01": "Alpi Pennine",
    "IT-23": "Aosta",
    "IT-23-AO-01": "SAINT-PIERRE SAINT-NICHOLAS",
    "IT-23-AO-02": "INTROD ARVIER",
    "IT-23-AO-03": "QUART NUS",
    "IT-23-AO-04": "POLLEIN SAINT MARCEL",
    "IT-23-AO-05": "BASSA VALTOURNENCHE CHATILLON",
    "IT-23-AO-23": "TESTATA SAINT-BARTHELEMY",
    "IT-23-AO-24": "VALTOURNENCHE",
    "IT-23-AO-26": "PONTEY",
    "IT-23-AO-06": "ALTA VALLE DI GRESSONEY",
    "IT-23-AO-07": "MEDIA VAL D'AYAS BRUSSON",
    "IT-23-AO-08": "MEDIA VALLE DEL LYS",
    "IT-23-AO-09": "VALLI DI GRESSONEY, AYAS, CHAMPORCHER",
    "IT-23-AO-10": "CHAMPDEPRAZ MONTE AVIC",
    "IT-23-AO-11": "VALLE DI CHAMPORCHER",
    "IT-23-AO-25": "TESTATA VAL D'AYAS SAINT-JACQUES",
    "IT-23-AO-12": "VAL DI COGNE AYMAVILLES",
    "IT-23-AO-13": "VALSAVARENCHE",
    "IT-23-AO-21": "VAL DI RHEMES",
    "IT-23-AO-14": "VAL FERRET",
    "IT-23-AO-15": "VALLE DI LA THUILE",
    "IT-23-AO-16": "VALGRISENCHE",
    "IT-23-AO-17": "LA SALLE MORGEX",
    "IT-23-AO-18": "GRAN SAN BERNARDO OLLOMONT",
    "IT-23-AO-19": "BASSA E MEDIA VALPELLINE",
    "IT-23-AO-20": "CERVINIA E ALTA VALPELLINE",
    "IT-23-AO-22": "VAL VENY",
    "IT-25": "Lombardia",
    "IT-25-BG-01": "OROBIE CENTRALI",
    "IT-25-BG-02": "PREALPI BERGAMASCHE",
    "IT-25-BS-01": "ADAMELLO",
    "IT-25-BS-02": "PREALPI BRESCIANE",
    "IT-25-LC-01": "OROBIE OCCIDENTALI",
    "IT-25-SO-01": "RETICHE OCCIDENTALI",
    "IT-25-SO-02": "RETICHE CENTRALI",
    "IT-25-SO-03": "RETICHE ORIENTALI",
    "IT-25-VA-01": "PREALPI OCCIDENTALI",
    "IT-25-SO-LI": "Livigno",
    "IT-32-BZ": "Alto Adige",
    "IT-32-BZ-01": "Alpi della Val Müstair",
    "IT-32-BZ-01-01": "Gruppo Sesvenna settentrionale",
    "IT-32-BZ-01-02": "Gruppo Sesvenna meridionale",
    "IT-32-BZ-02": "Vallelunga",
    "IT-32-BZ-02-01": "Vallelunga",
    "IT-32-BZ-02-02": "Monti di Pianol",
    "IT-32-BZ-03": "Cresta di Senales",
    "IT-32-BZ-04": "Alpi dello Stubai meridionali",
    "IT-32-BZ-04-01": "Alpi dello Stubai meridionali",
    "IT-32-BZ-04-02": "Racines",
    "IT-32-BZ-05": "Alpi della Zillertal meridionali e Alti Tauri",
    "IT-32-BZ-05-01": "Val di Vizze",
    "IT-32-BZ-05-02": "Alpi della Zillertal meridionali",
    "IT-32-BZ-05-03": "Alta Valle Aurina",
    "IT-32-BZ-06": "Gruppo Saldura-Mastaun",
    "IT-32-BZ-07": "Gruppo Tessa",
    "IT-32-BZ-07-01": "Alta Val Passiria",
    "IT-32-BZ-07-02": "Gruppo Tessa",
    "IT-32-BZ-08": "Alpi Sarentine",
    "IT-32-BZ-08-01": "Gruppo della Punta Cervina",
    "IT-32-BZ-08-02": "Gruppo della Cima San Giacomo",
    "IT-32-BZ-08-03": "Alpi Sarentine meridionali",
    "IT-32-BZ-09": "Monti di Fundres occidentali",
    "IT-32-BZ-10": "Monti di Fundres orientali",
    "IT-32-BZ-11": "Gruppo della Cima Dura",
    "IT-32-BZ-12": "Catena delle Vedrette di Ries",
    "IT-32-BZ-13": "Alpi del Defereggen occidentali",
    "IT-32-BZ-14": "Gruppo dell'Ortles",
    "IT-32-BZ-15": "Val d'Ultimo",
    "IT-32-BZ-16": "Alpi della Val di Non orientali",
    "IT-32-BZ-17": "Dolomiti di Fiemme settentrionali",
    "IT-32-BZ-18": "Dolomiti di Gardena",
    "IT-32-BZ-18-01": "Costiera di Luson",
    "IT-32-BZ-18-02": "Dolomiti di Gardena",
    "IT-32-BZ-19": "Dolomiti di Braies",
    "IT-32-BZ-20": "Dolomiti di Sesto",
    "IT-32-TN": "Trentino",
    "IT-32-TN-01": "Adamello - Presanella",
    "IT-32-TN-02": "Adamello meridionale",
    "IT-32-TN-03": "Bondone e Stivo",
    "IT-32-TN-04": "Brenta settentrionale - Peller",
    "IT-32-TN-05": "Brenta meridionale",
    "IT-32-TN-06": "Folgaria - Lavarone",
    "IT-32-TN-07": "Lagorai settentrionale",
    "IT-32-TN-08": "Lagorai meridionale",
    "IT-32-TN-09": "Latemar",
    "IT-32-TN-10": "Marzola - Valsugana",
    "IT-32-TN-11": "Paganella",
    "IT-32-TN-12": "Prealpi",
    "IT-32-TN-13": "Primiero - Pale di S. Martino",
    "IT-32-TN-14": "Vallarsa",
    "IT-32-TN-15": "Valle di Cembra",
    "IT-32-TN-16": "Valle di Fassa",
    "IT-32-TN-17": "Alpi della Val di Non occidentali",
    "IT-32-TN-18": "Valle di Ledro",
    "IT-32-TN-19": "Sole, Pejo e Rabbi",
    "IT-32-TN-20": "Maddalene",
    "IT-32-TN-21": "Pine' - Valle dei Mocheni",
    "IT-34": "Veneto",
    "IT-34-BL-01": "Agordino, Zoldano",
    "IT-34-BL-02": "Ampezzo - Cadore",
    "IT-34-BL-03": "Ansiei - Comelico",
    "IT-34-BL-04": "Cadore",
    "IT-34-BL-05": "Alpago - Cansiglio",
    "IT-34-BL-06": "Vette Feltrine, Visentin, Grappa",
    "IT-34-VI-01": "Altopiano, Pasubio, Carega",
    "IT-34-VR-01": "Baldo, Lessini",
    "IT-36": "Friuli Venezia Giulia",
    "IT-36-UD-01": "ALPI CARNICHE OCCIDENTALI",
    "IT-36-UD-02": "ALPI CARNICHE ORIENTALI",
    "IT-36-UD-03": "ALPI GIULIE SENZA CANIN",
    "IT-36-UD-04": "CANIN",
    "IT-36-UD-05": "PREALPI GIULIE",
    "IT-36-PN-01": "PREALPI CARNICHE OCCIDENTALI",
    "IT-36-PN-02": "PRALPI CARNICHE ORIENTALI",
    "IT-42": "Liguria",
    "IT-45": "Emilia-Romagna",
    "IT-52": "Toscana",
    "IT-57": "Marche",
    "IT-57-AP-01": "Monti Sibillini Ovest",
    "IT-57-AP-02": "Monti Sibillini Est e Laga Marchigiana",
    "IT-57-MC-01": "Appennino Fabrianese",
    "IT-57-PU-01": "Appennino Pesarese",
    "IT-65": "Abruzzo",
    "IT-77": "Basilicata",
    "IT-82": "Sicilia",
}
